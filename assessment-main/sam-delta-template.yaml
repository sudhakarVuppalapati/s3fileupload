AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Announcement

  Sample SAM Template for Announcement
 

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
Parameters: 
    Stage: 
      Type: String
    SourceBucketName:
      Type: String
Resources:
  ## S3 bucket
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName


  UploadFile:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.app1
      Runtime: python3.7
      Policies:
        Policies:
          - S3CrudPolicy:
              BucketName: !Ref SourceBucketName
          Environment:
            Variables:
             BUCKETNAME: !Ref SourceBucketName

      Events:
        PostUpload:
          Type: S3 # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: /uploadfile
            Bucket: !Ref SourceBucket
            Events: s3:ObjectCreated:*
            Method: post

        ListAnnouncements:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /getdata
            Method: get



  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      CacheClusterEnabled: true
      CacheClusterSize: '0.5'
      MethodSettings:
        - CachingEnabled: false
          CacheTtlInSeconds: 0
          HttpMethod: '*'
          ResourcePath: '/*'
      Auth:
        DefaultAuthorizer: MyLambdaRequestAuthorizer
        Authorizers:
          MyLambdaRequestAuthorizer:
            FunctionPayloadType: REQUEST
            FunctionArn: !GetAtt MyAuthFunction.Arn
            Identity:
              # Must specify at least one of
              # Headers, QueryStrings, StageVariables, or Context
              QueryStrings:
                - auth
              Headers:
                - approval
              # ReauthorizeEvery: 100
 
  MyAuthFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./authorizer
      Handler: handler.authorizer
      Runtime: nodejs18.x
      
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/hello/"
  HelloWorldFunction1:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction1.Arn
  HelloWorldFunction1IamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunction1Role.Arn
